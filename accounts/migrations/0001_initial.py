# Generated by Django 3.2 on 2023-03-20 23:25

import cloudinary.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('specialties', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name_en', models.CharField(max_length=70)),
                ('country', models.CharField(max_length=100)),
                ('city_en', models.CharField(max_length=100)),
                ('phone', models.CharField(blank=True, max_length=100)),
                ('is_patient', models.BooleanField(default=False)),
                ('is_doctor', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female')], max_length=15)),
                ('age', models.PositiveSmallIntegerField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile_patient', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_ar', models.CharField(blank=True, max_length=70, null=True)),
                ('city_ar', models.CharField(blank=True, max_length=100, null=True)),
                ('profile_pic', cloudinary.models.CloudinaryField(max_length=255, verbose_name='profile_pic')),
                ('syndicate_card', cloudinary.models.CloudinaryField(max_length=255, verbose_name='syndicate_card')),
                ('syndicate_number', models.CharField(blank=True, max_length=100)),
                ('bio_ar', models.TextField(blank=True)),
                ('bio_en', models.TextField(blank=True)),
                ('certificate', models.CharField(choices=[('BACHELOR', "Bachelor's Degree"), ('MASTER', "Master's Degree"), ('DOCTORAL', "Doctoral's Degree")], default='BACHELOR', max_length=20)),
                ('cv', cloudinary.models.CloudinaryField(max_length=255, verbose_name='cv')),
                ('work_location_ar', models.TextField(blank=True, null=True)),
                ('work_location_en', models.TextField(blank=True, null=True)),
                ('specialty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='specialties.specialty')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile_doctor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
